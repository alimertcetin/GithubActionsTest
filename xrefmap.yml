### YamlMime:XRefMap
sorted: true
references:
- uid: TestApp
  name: TestApp
  href: api/TestApp.html
  commentId: N:TestApp
  fullName: TestApp
  nameWithType: TestApp
- uid: TestApp.AnImportantClass
  name: AnImportantClass
  href: api/TestApp.AnImportantClass.html
  commentId: T:TestApp.AnImportantClass
  fullName: TestApp.AnImportantClass
  nameWithType: AnImportantClass
- uid: TestApp.AnImportantClass.Dispose
  name: Dispose()
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_Dispose
  commentId: M:TestApp.AnImportantClass.Dispose
  fullName: TestApp.AnImportantClass.Dispose()
  nameWithType: AnImportantClass.Dispose()
- uid: TestApp.AnImportantClass.Dispose*
  name: Dispose
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_Dispose_
  commentId: Overload:TestApp.AnImportantClass.Dispose
  isSpec: "True"
  fullName: TestApp.AnImportantClass.Dispose
  nameWithType: AnImportantClass.Dispose
- uid: TestApp.AnImportantClass.Equals(TestApp.AnImportantClass)
  name: Equals(AnImportantClass?)
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_Equals_TestApp_AnImportantClass_
  commentId: M:TestApp.AnImportantClass.Equals(TestApp.AnImportantClass)
  name.vb: Equals(AnImportantClass)
  fullName: TestApp.AnImportantClass.Equals(TestApp.AnImportantClass?)
  fullName.vb: TestApp.AnImportantClass.Equals(TestApp.AnImportantClass)
  nameWithType: AnImportantClass.Equals(AnImportantClass?)
  nameWithType.vb: AnImportantClass.Equals(AnImportantClass)
- uid: TestApp.AnImportantClass.Equals*
  name: Equals
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_Equals_
  commentId: Overload:TestApp.AnImportantClass.Equals
  isSpec: "True"
  fullName: TestApp.AnImportantClass.Equals
  nameWithType: AnImportantClass.Equals
- uid: TestApp.AnImportantClass.ToString
  name: ToString()
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_ToString
  commentId: M:TestApp.AnImportantClass.ToString
  fullName: TestApp.AnImportantClass.ToString()
  nameWithType: AnImportantClass.ToString()
- uid: TestApp.AnImportantClass.ToString*
  name: ToString
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_ToString_
  commentId: Overload:TestApp.AnImportantClass.ToString
  isSpec: "True"
  fullName: TestApp.AnImportantClass.ToString
  nameWithType: AnImportantClass.ToString
- uid: TestApp.AnImportantClass.sVal
  name: sVal
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_sVal
  commentId: P:TestApp.AnImportantClass.sVal
  fullName: TestApp.AnImportantClass.sVal
  nameWithType: AnImportantClass.sVal
- uid: TestApp.AnImportantClass.sVal*
  name: sVal
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_sVal_
  commentId: Overload:TestApp.AnImportantClass.sVal
  isSpec: "True"
  fullName: TestApp.AnImportantClass.sVal
  nameWithType: AnImportantClass.sVal
- uid: TestApp.AnImportantClass.val1
  name: val1
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_val1
  commentId: F:TestApp.AnImportantClass.val1
  fullName: TestApp.AnImportantClass.val1
  nameWithType: AnImportantClass.val1
- uid: TestApp.AnImportantClass.valProp1
  name: valProp1
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_valProp1
  commentId: P:TestApp.AnImportantClass.valProp1
  fullName: TestApp.AnImportantClass.valProp1
  nameWithType: AnImportantClass.valProp1
- uid: TestApp.AnImportantClass.valProp1*
  name: valProp1
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_valProp1_
  commentId: Overload:TestApp.AnImportantClass.valProp1
  isSpec: "True"
  fullName: TestApp.AnImportantClass.valProp1
  nameWithType: AnImportantClass.valProp1
- uid: TestApp.AnImportantClass.valProp2
  name: valProp2
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_valProp2
  commentId: P:TestApp.AnImportantClass.valProp2
  fullName: TestApp.AnImportantClass.valProp2
  nameWithType: AnImportantClass.valProp2
- uid: TestApp.AnImportantClass.valProp2*
  name: valProp2
  href: api/TestApp.AnImportantClass.html#TestApp_AnImportantClass_valProp2_
  commentId: Overload:TestApp.AnImportantClass.valProp2
  isSpec: "True"
  fullName: TestApp.AnImportantClass.valProp2
  nameWithType: AnImportantClass.valProp2
- uid: TestApp.AnotherImportantClass
  name: AnotherImportantClass
  href: api/TestApp.AnotherImportantClass.html
  commentId: T:TestApp.AnotherImportantClass
  fullName: TestApp.AnotherImportantClass
  nameWithType: AnotherImportantClass
- uid: TestApp.AnotherImportantClass.Dispose
  name: Dispose()
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_Dispose
  commentId: M:TestApp.AnotherImportantClass.Dispose
  fullName: TestApp.AnotherImportantClass.Dispose()
  nameWithType: AnotherImportantClass.Dispose()
- uid: TestApp.AnotherImportantClass.Dispose*
  name: Dispose
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_Dispose_
  commentId: Overload:TestApp.AnotherImportantClass.Dispose
  isSpec: "True"
  fullName: TestApp.AnotherImportantClass.Dispose
  nameWithType: AnotherImportantClass.Dispose
- uid: TestApp.AnotherImportantClass.Equals(TestApp.AnotherImportantClass)
  name: Equals(AnotherImportantClass?)
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_Equals_TestApp_AnotherImportantClass_
  commentId: M:TestApp.AnotherImportantClass.Equals(TestApp.AnotherImportantClass)
  name.vb: Equals(AnotherImportantClass)
  fullName: TestApp.AnotherImportantClass.Equals(TestApp.AnotherImportantClass?)
  fullName.vb: TestApp.AnotherImportantClass.Equals(TestApp.AnotherImportantClass)
  nameWithType: AnotherImportantClass.Equals(AnotherImportantClass?)
  nameWithType.vb: AnotherImportantClass.Equals(AnotherImportantClass)
- uid: TestApp.AnotherImportantClass.Equals*
  name: Equals
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_Equals_
  commentId: Overload:TestApp.AnotherImportantClass.Equals
  isSpec: "True"
  fullName: TestApp.AnotherImportantClass.Equals
  nameWithType: AnotherImportantClass.Equals
- uid: TestApp.AnotherImportantClass.ToString
  name: ToString()
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_ToString
  commentId: M:TestApp.AnotherImportantClass.ToString
  fullName: TestApp.AnotherImportantClass.ToString()
  nameWithType: AnotherImportantClass.ToString()
- uid: TestApp.AnotherImportantClass.ToString*
  name: ToString
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_ToString_
  commentId: Overload:TestApp.AnotherImportantClass.ToString
  isSpec: "True"
  fullName: TestApp.AnotherImportantClass.ToString
  nameWithType: AnotherImportantClass.ToString
- uid: TestApp.AnotherImportantClass.sVal
  name: sVal
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_sVal
  commentId: P:TestApp.AnotherImportantClass.sVal
  fullName: TestApp.AnotherImportantClass.sVal
  nameWithType: AnotherImportantClass.sVal
- uid: TestApp.AnotherImportantClass.sVal*
  name: sVal
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_sVal_
  commentId: Overload:TestApp.AnotherImportantClass.sVal
  isSpec: "True"
  fullName: TestApp.AnotherImportantClass.sVal
  nameWithType: AnotherImportantClass.sVal
- uid: TestApp.AnotherImportantClass.val1
  name: val1
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_val1
  commentId: F:TestApp.AnotherImportantClass.val1
  fullName: TestApp.AnotherImportantClass.val1
  nameWithType: AnotherImportantClass.val1
- uid: TestApp.AnotherImportantClass.valProp1
  name: valProp1
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_valProp1
  commentId: P:TestApp.AnotherImportantClass.valProp1
  fullName: TestApp.AnotherImportantClass.valProp1
  nameWithType: AnotherImportantClass.valProp1
- uid: TestApp.AnotherImportantClass.valProp1*
  name: valProp1
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_valProp1_
  commentId: Overload:TestApp.AnotherImportantClass.valProp1
  isSpec: "True"
  fullName: TestApp.AnotherImportantClass.valProp1
  nameWithType: AnotherImportantClass.valProp1
- uid: TestApp.AnotherImportantClass.valProp2
  name: valProp2
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_valProp2
  commentId: P:TestApp.AnotherImportantClass.valProp2
  fullName: TestApp.AnotherImportantClass.valProp2
  nameWithType: AnotherImportantClass.valProp2
- uid: TestApp.AnotherImportantClass.valProp2*
  name: valProp2
  href: api/TestApp.AnotherImportantClass.html#TestApp_AnotherImportantClass_valProp2_
  commentId: Overload:TestApp.AnotherImportantClass.valProp2
  isSpec: "True"
  fullName: TestApp.AnotherImportantClass.valProp2
  nameWithType: AnotherImportantClass.valProp2
- uid: TestApp.SomeTestClass
  name: SomeTestClass
  href: api/TestApp.SomeTestClass.html
  commentId: T:TestApp.SomeTestClass
  fullName: TestApp.SomeTestClass
  nameWithType: SomeTestClass
- uid: TestApp.SomeTestClass.Create
  name: Create()
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_Create
  commentId: M:TestApp.SomeTestClass.Create
  fullName: TestApp.SomeTestClass.Create()
  nameWithType: SomeTestClass.Create()
- uid: TestApp.SomeTestClass.Create*
  name: Create
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_Create_
  commentId: Overload:TestApp.SomeTestClass.Create
  isSpec: "True"
  fullName: TestApp.SomeTestClass.Create
  nameWithType: SomeTestClass.Create
- uid: TestApp.SomeTestClass.MethodWithParams(System.Int32[])
  name: MethodWithParams(params int[])
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_MethodWithParams_System_Int32___
  commentId: M:TestApp.SomeTestClass.MethodWithParams(System.Int32[])
  name.vb: MethodWithParams(ParamArray Integer())
  fullName: TestApp.SomeTestClass.MethodWithParams(params int[])
  fullName.vb: TestApp.SomeTestClass.MethodWithParams(ParamArray Integer())
  nameWithType: SomeTestClass.MethodWithParams(params int[])
  nameWithType.vb: SomeTestClass.MethodWithParams(ParamArray Integer())
- uid: TestApp.SomeTestClass.MethodWithParams*
  name: MethodWithParams
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_MethodWithParams_
  commentId: Overload:TestApp.SomeTestClass.MethodWithParams
  isSpec: "True"
  fullName: TestApp.SomeTestClass.MethodWithParams
  nameWithType: SomeTestClass.MethodWithParams
- uid: TestApp.SomeTestClass.SomeTestMethod
  name: SomeTestMethod()
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_SomeTestMethod
  commentId: M:TestApp.SomeTestClass.SomeTestMethod
  fullName: TestApp.SomeTestClass.SomeTestMethod()
  nameWithType: SomeTestClass.SomeTestMethod()
- uid: TestApp.SomeTestClass.SomeTestMethod*
  name: SomeTestMethod
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_SomeTestMethod_
  commentId: Overload:TestApp.SomeTestClass.SomeTestMethod
  isSpec: "True"
  fullName: TestApp.SomeTestClass.SomeTestMethod
  nameWithType: SomeTestClass.SomeTestMethod
- uid: TestApp.SomeTestClass.TEST_STRİNG
  name: TEST_STRİNG
  href: api/TestApp.SomeTestClass.html#TestApp_SomeTestClass_TEST_STRİNG
  commentId: F:TestApp.SomeTestClass.TEST_STRİNG
  fullName: TestApp.SomeTestClass.TEST_STRİNG
  nameWithType: SomeTestClass.TEST_STRİNG
